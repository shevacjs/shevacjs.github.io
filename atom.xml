<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>shevacjs home</title>
  <subtitle>自强不息</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shevacjs.com/"/>
  <updated>2017-08-03T03:23:48.000Z</updated>
  <id>http://shevacjs.com/</id>
  
  <author>
    <name>shevacjs</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx 1.13.0 版本说明</title>
    <link href="http://shevacjs.com/2017/08/02/nginx_1_13_0/"/>
    <id>http://shevacjs.com/2017/08/02/nginx_1_13_0/</id>
    <published>2017-08-02T06:17:29.000Z</published>
    <updated>2017-08-03T03:23:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原始feature说明"><a href="#原始feature说明" class="headerlink" title="原始feature说明"></a>原始feature说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">*) Change: SSL renegotiation is now allowed on backend connections.</div><div class="line"></div><div class="line">*) Feature: the &quot;rcvbuf&quot; and &quot;sndbuf&quot; parameters of the &quot;listen&quot;</div><div class="line">   directives of the mail proxy and stream modules.</div><div class="line"></div><div class="line">*) Feature: the &quot;return&quot; and &quot;error_page&quot; directives can now be used to</div><div class="line">   return 308 redirections.</div><div class="line">   Thanks to Simon Leblanc.</div><div class="line"></div><div class="line">*) Feature: the &quot;TLSv1.3&quot; parameter of the &quot;ssl_protocols&quot; directive.</div><div class="line"></div><div class="line">*) Feature: when logging signals nginx now logs PID of the process which</div><div class="line">   sent the signal.</div><div class="line"></div><div class="line">*) Bugfix: in memory allocation error handling.</div><div class="line"></div><div class="line">*) Bugfix: if a server in the stream module listened on a wildcard</div><div class="line">   address, the source address of a response UDP datagram could differ</div><div class="line">   from the original datagram destination address.</div></pre></td></tr></table></figure>
<p>我们主要关系其新增的feature, 包括:</p>
<ul>
<li>return/error_page支持308状态码</li>
<li>nginx收到信号的时候，支持打印信号源的pid</li>
<li><code>ssl_protocols</code> 支持 TLSv1.3 协议</li>
</ul>
<p><code>TLS 1.3</code>协议是一个比较先进的新协议, 这里先不展开，我们重点介绍前两个功能特性的作用和简单实现</p>
<a id="more"></a>
<h3 id="308状态码的支持"><a href="#308状态码的支持" class="headerlink" title="308状态码的支持"></a>308状态码的支持</h3><p>首先，我们来看308状态码的含义以及作用，因为其和301/302/307有很多相似之处(参考<a href="https://stackoverflow.com/questions/42136829/whats-difference-between-http-301-and-308-status-codes" target="_blank" rel="external">此文章</a>)</p>
<p>具体结果可以用表格说明如下: </p>
<table>
<thead>
<tr>
<th>功能作用</th>
<th>Permanent</th>
<th>Temporary </th>
</tr>
</thead>
<tbody>
<tr>
<td>Allows changing the request method from POST to GET</td>
<td>301</td>
<td>302  </td>
</tr>
<tr>
<td>Doesn’t allow changing the request method from POST to GET</td>
<td>308</td>
<td>307  </td>
</tr>
</tbody>
</table>
<p>具体作用，参考了<a href="https://tools.ietf.org/html/rfc7238" target="_blank" rel="external">RFC7238</a>, 个人感觉好像只是能用于保证请求的方法不会被改变; 但其实不是特别理解这一类应用场景</p>
<p>如下是个人感觉比较好的一个HTTP状态码说明图:</p>
<p><img src="/images/http_status.png" alt="http status"></p>
<p>其次简单看下代码实现, 其实不是很难，简单代码摘要如下:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// 主要代码在: ngx_http_special_response.c</span></div><div class="line"></div><div class="line"><span class="comment">// 1. 对于特殊的状态码，nginx会通过如下方式回调:ngx_http_special_response_handler </span></div><div class="line"><span class="comment">// ngx_http_request.c:2345:        ngx_http_finalize_request(r, ngx_http_special_response_handler(r, rc));</span></div><div class="line"></div><div class="line"><span class="comment">// 2. ngx_http_special_response_handler如果有error_page 会调用: ngx_http_send_error_page</span></div><div class="line"></div><div class="line"><span class="comment">// 3. ngx_http_send_error_page 对于特殊状态码处理如下:</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">char</span> ngx_http_error_308_page[] =</div><div class="line"><span class="string">"&lt;html&gt;"</span> CRLF</div><div class="line"><span class="string">"&lt;head&gt;&lt;title&gt;308 Permanent Redirect&lt;/title&gt;&lt;/head&gt;"</span> CRLF</div><div class="line"><span class="string">"&lt;body bgcolor=\"white\"&gt;"</span> CRLF</div><div class="line"><span class="string">"&lt;center&gt;&lt;h1&gt;308 Permanent Redirect&lt;/h1&gt;&lt;/center&gt;"</span> CRLF</div><div class="line">;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">ngx_str_t</span> ngx_http_error_pages[] = &#123;</div><div class="line"></div><div class="line">    ngx_null_string,                     <span class="comment">/* 201, 204 */</span></div><div class="line"></div><div class="line">#define NGX_HTTP_LAST_2XX  <span class="number">202</span></div><div class="line">#define NGX_HTTP_OFF_3XX   (NGX_HTTP_LAST_2XX - <span class="number">201</span>)</div><div class="line"></div><div class="line">    <span class="comment">/* ngx_null_string, */</span>               <span class="comment">/* 300 */</span></div><div class="line">    ngx_string(ngx_http_error_301_page),</div><div class="line">    ngx_string(ngx_http_error_302_page),</div><div class="line">    ngx_string(ngx_http_error_303_page),</div><div class="line">    ngx_null_string,                     <span class="comment">/* 304 */</span></div><div class="line">    ngx_null_string,                     <span class="comment">/* 305 */</span></div><div class="line">    ngx_null_string,                     <span class="comment">/* 306 */</span></div><div class="line">    ngx_string(ngx_http_error_307_page),</div><div class="line">    ngx_string(ngx_http_error_308_page),</div><div class="line"></div><div class="line">#define NGX_HTTP_LAST_3XX  <span class="number">309</span></div><div class="line"></div><div class="line">...</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// nginx 会自动化判断数组里面的元素，如果有的话，就可以返回相关的状态码</span></div></pre></td></tr></table></figure>
<p>可以看到实现起来其实还是方便和简单的</p>
<h3 id="支持打印信号源进程信息"><a href="#支持打印信号源进程信息" class="headerlink" title="支持打印信号源进程信息"></a>支持打印信号源进程信息</h3><blockquote>
<p>PS: 现在还不是很理解这个功能的作用，一般控制nginx都是一些脚本，生命周期很短，即便记录pid感觉对于生产应用作用也有限哈</p>
</blockquote>
<p>实现起来其实很简单, 因为<a href="http://man7.org/linux/man-pages/man2/sigaction.2.html" target="_blank" rel="external">sigaction</a> 本身是支持传递来源pid的，只不过老版本的nginx用来较弱的功能, diff如下:</p>
<p>回调函数原型修改(sigaction本身对function的支持就是一个union)</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">diff -r nginx<span class="number">-1.11</span><span class="number">.13</span>/src/os/unix/ngx_process.c nginx<span class="number">-1.13</span><span class="number">.0</span>/src/os/unix/ngx_process.c</div><div class="line"><span class="number">18</span>c18</div><div class="line">&lt;     <span class="keyword">void</span>  (*handler)(<span class="keyword">int</span> signo);</div><div class="line">---</div><div class="line">&gt;     <span class="keyword">void</span>  (*handler)(<span class="keyword">int</span> signo, <span class="keyword">siginfo_t</span> *siginfo, <span class="keyword">void</span> *ucontext);</div></pre></td></tr></table></figure>
<p>打印日志的时候加上相关信息:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&gt; ngx_signal_handler(<span class="keyword">int</span> signo, <span class="keyword">siginfo_t</span> *siginfo, <span class="keyword">void</span> *ucontext)</div><div class="line"><span class="number">434</span>,<span class="number">435</span>c442,<span class="number">451</span></div><div class="line">&lt;     ngx_log_error(NGX_LOG_NOTICE, ngx_cycle-&gt;<span class="built_in">log</span>, <span class="number">0</span>,</div><div class="line">&lt;                   <span class="string">"signal %d (%s) received%s"</span>, signo, sig-&gt;signame, action);</div><div class="line">---</div><div class="line">&gt;     <span class="keyword">if</span> (siginfo &amp;&amp; siginfo-&gt;si_pid) &#123;</div><div class="line">&gt;         ngx_log_error(NGX_LOG_NOTICE, ngx_cycle-&gt;<span class="built_in">log</span>, <span class="number">0</span>,</div><div class="line">&gt;                       <span class="string">"signal %d (%s) received from %P%s"</span>,</div><div class="line">&gt;                       signo, sig-&gt;signame, siginfo-&gt;si_pid, action);</div><div class="line">&gt; </div><div class="line">&gt;     &#125; <span class="keyword">else</span> &#123;</div><div class="line">&gt;         ngx_log_error(NGX_LOG_NOTICE, ngx_cycle-&gt;<span class="built_in">log</span>, <span class="number">0</span>,</div><div class="line">&gt;                       <span class="string">"signal %d (%s) received%s"</span>,</div><div class="line">&gt;                       signo, sig-&gt;signame, action);</div><div class="line">&gt;     &#125;</div></pre></td></tr></table></figure>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>没有感觉特别有用的业务场景支持；不过nginx对<code>TLSv1.3</code>的支持，下来会review下；其对后续的https交互优化有着重要促进作用</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;原始feature说明&quot;&gt;&lt;a href=&quot;#原始feature说明&quot; class=&quot;headerlink&quot; title=&quot;原始feature说明&quot;&gt;&lt;/a&gt;原始feature说明&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;*) Change: SSL renegotiation is now allowed on backend connections.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*) Feature: the &amp;quot;rcvbuf&amp;quot; and &amp;quot;sndbuf&amp;quot; parameters of the &amp;quot;listen&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   directives of the mail proxy and stream modules.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*) Feature: the &amp;quot;return&amp;quot; and &amp;quot;error_page&amp;quot; directives can now be used to&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   return 308 redirections.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   Thanks to Simon Leblanc.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*) Feature: the &amp;quot;TLSv1.3&amp;quot; parameter of the &amp;quot;ssl_protocols&amp;quot; directive.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*) Feature: when logging signals nginx now logs PID of the process which&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   sent the signal.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*) Bugfix: in memory allocation error handling.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*) Bugfix: if a server in the stream module listened on a wildcard&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   address, the source address of a response UDP datagram could differ&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   from the original datagram destination address.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们主要关系其新增的feature, 包括:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;return/error_page支持308状态码&lt;/li&gt;
&lt;li&gt;nginx收到信号的时候，支持打印信号源的pid&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_protocols&lt;/code&gt; 支持 TLSv1.3 协议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;TLS 1.3&lt;/code&gt;协议是一个比较先进的新协议, 这里先不展开，我们重点介绍前两个功能特性的作用和简单实现&lt;/p&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="http://shevacjs.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170730</title>
    <link href="http://shevacjs.com/2017/07/31/20170730/"/>
    <id>http://shevacjs.com/2017/07/31/20170730/</id>
    <published>2017-07-31T12:43:11.000Z</published>
    <updated>2017-07-31T12:43:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><ul>
<li><p><a href="https://github.com/memcached/memcached/wiki/ReleaseNotes150" target="_blank" rel="external">Memcached 1.5.0 Release Notes</a> : 支持更丰富强大的LRU策略</p>
</li>
<li><p><a href="https://blogs.windows.com/windowsexperience/2017/07/24/ms-paint-stay/#7aOF1Y7VUckzCI8i.97" target="_blank" rel="external">MS Paint is here to stay</a> : <code>画图</code>软件，先说可能被win10放弃，后来不少用户表示遗憾；现在调整为在windows store可以下载</p>
</li>
</ul>
<h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><p><a href="https://hacks.mozilla.org/2017/07/the-next-generation-of-web-gaming/" target="_blank" rel="external">The Next Generation of Web Gaming</a> : Mozilla的官方blog论述近几年浏览器对web game的支持情况，包括<code>webassembly</code>, <code>SIMD</code>指令支持, <code>SharedArrayBuffer</code>等</p>
</li>
<li><p><a href="https://blogs.technet.microsoft.com/machinelearning/2017/07/25/lessons-learned-benchmarking-fast-machine-learning-algorithms/" target="_blank" rel="external">Lessons Learned From Benchmarking Fast Machine Learning Algorithms</a> : This blog shows the Microsoft’s efforts on <code>boosted decision trees</code> algrothim – LightGBM, which is think to be faster than XGBBoost; We can have a try later. </p>
</li>
<li><p><a href="http://codefine.co/2918.html" target="_blank" rel="external">Linux TCP Backlog机制分析</a> : 主要介绍了当半连接队列打满时候，客户端和服务端的行为, <code>tcp_abort_on_overflow</code> 可以控制不同的行为</p>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/28197440" target="_blank" rel="external">《攻击者说企业安全》之终端安全建议</a> : 先mark里面的建议: <code>强烈推荐习惯 GPG，官网 http://gnupg.org，超强公私钥加密体系，其实习惯后，使用成本很低的，而且免费，以后一些重要文件需要传播，用 GPG 绝对是第一选择，顺便建议学学 gpg 命令</code></p>
</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><p><a href="http://www.52cs.org/?p=1851&amp;from=timeline&amp;isappinstalled=1" target="_blank" rel="external">点击率预估综述</a> :  对rank的排序算法有个非常系统和完整的介绍，理解了一部分，mark后继续</p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s/1y5WD_vRfoSmGPbJ2-e86Q" target="_blank" rel="external">如何直观解释卷积神经网络的工作原理？</a> : </p>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><p><a href="http://codebay.cn/post/3964.html" target="_blank" rel="external">调查显示：近半程序员认为上级技术水平不如自己</a> : 有点标题党，不过里面的其他一些信息还是有指导意义, 包括”程序员在未来三个月内想要学习的顶尖工具：Docker，Python，Angular，Ansible和Jenkins”</p>
</li>
<li><p><a href="https://news.ycombinator.com/item?id=14842276" target="_blank" rel="external">Ask HN: What programming blogs do you follow?</a> : 有很多非常好的blog推荐, 先mark，后续看看怎么放到RSS上面</p>
</li>
<li><p><a href="http://ruder.io/deep-learning-nlp-best-practices/" target="_blank" rel="external">Deep Learning for NLP Best Practices</a> : 先mark</p>
</li>
<li><p><a href="https://medium.com/towards-data-science/symspell-vs-bk-tree-100x-faster-fuzzy-string-search-spell-checking-c4f10d80a078" target="_blank" rel="external">SymSpell vs. BK-tree: 100x faster fuzzy string search &amp; spell checking</a> : 也是只能先mark</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/memcached/memcached/wiki/Rele
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170723</title>
    <link href="http://shevacjs.com/2017/07/23/20170723/"/>
    <id>http://shevacjs.com/2017/07/23/20170723/</id>
    <published>2017-07-23T06:15:31.000Z</published>
    <updated>2017-07-21T06:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><ul>
<li><a href="https://stackoverflow.com/channels" target="_blank" rel="external">Stack Overflow Channels</a> : Stack Overflow Channel是SO新退出的产品功能, 用于支持一些组织或者机构内部的问题交流&amp;沉淀, 感觉对于一些中小企业还是有帮助的</li>
</ul>
<h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><p><a href="http://coolshell.cn/articles/17998.html" target="_blank" rel="external">LINUX PID 1 和 SYSTEMD</a> :  关于linux启动的systemd和<code>init 1</code>的恩恩怨怨</p>
</li>
<li><p><a href="https://jvns.ca/blog/2017/07/05/linux-tracing-systems/" target="_blank" rel="external">Linux tracing systems &amp; how they fit together</a> : 对Linux系统的trace工具有个系统性的介绍和分类，可以加深我们对这些分类工具和系统的理解</p>
</li>
<li><p><a href="https://techcrunch.com/2017/07/18/yandex-open-sources-catboost-a-gradient-boosting-machine-learning-librar/" target="_blank" rel="external">Yandex open sources CatBoost, a gradient boosting machine learning library</a> :  一个新的梯度学习算法库，可以了解参考下</p>
</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><a href="http://wetest.qq.com/lab/view/320.html" target="_blank" rel="external">性能百万/s：腾讯轻量级全局流控方案详解</a> : 可以看到比较具体的实现，<code>租赁</code>机制是个不错的创新，可以在性能和功能上面有个合适的折衷</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><a href="http://road.ruanyifeng.com/2007/2007-12-12-joel-spolsky.html" target="_blank" rel="external">Joel Spolsky 在耶鲁大学的演讲</a> : 生活是自己的，好好工作，好好生活</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/channels&quot; target=&quot;_blank&quot;
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>About SVM</title>
    <link href="http://shevacjs.com/2017/07/21/svm/"/>
    <id>http://shevacjs.com/2017/07/21/svm/</id>
    <published>2017-07-20T16:25:11.000Z</published>
    <updated>2017-07-21T09:50:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>SVM的核心思想是，通过构造一个超平面将空间中的数据进行划分，可以用于分类，回归或者其他任务;</p>
<p>一个直观的理解是: 我们构造的平面, 其距离样本的点距离越远越好;</p>
<p>而对于线性不可分的情况，我们则可以通过构造映射函数，将其映射到高维空间, 变成一个线性可分的模型</p>
<p>下面具体介绍这些思路的数学演绎过程</p>
<h2 id="数学演绎"><a href="#数学演绎" class="headerlink" title="数学演绎"></a>数学演绎</h2><p>设我们的<code>输入样本</code>为: </p>
<p>$$ { (x_1,y_1), … , (x_N, y_N)}$$</p>
<p>其中: </p>
<ul>
<li>$x_i \in R^n $</li>
<li>$y_i \in { -1, 1 }$</li>
</ul>
<p>首先考虑<code>线性可分</code>的情况;  此时设我们要求解的超平面为: </p>
<p>$$\textbf{w}^T\textbf{x} + b = 0 $$</p>
<p>则有: </p>
<h3 id="间隔定义"><a href="#间隔定义" class="headerlink" title="间隔定义"></a>间隔定义</h3><p>我们定义函数间隔如下: </p>
<p>$$\widehat{\gamma}_i = y_i (w \centerdot x + b )$$</p>
<p>定义几何间隔如下 :<br>$$\gamma_i = y_i (\frac{w}{|w|} \centerdot x + \frac{b}{|w|})$$</p>
<p>可以看到几何间隔就是在$|w| = 1$ 时候的函数间隔，也是代表这个点到平面的实际几何距离；也有如下关系: </p>
<p>$$ \gamma = \frac{\widehat {\gamma}}{| w |}$$</p>
<h3 id="最优值定义"><a href="#最优值定义" class="headerlink" title="最优值定义"></a>最优值定义</h3><p>我们可以理解需要获取一个最大几何间隔的分离超平面(<code>为什么</code> ? ), 表针为: </p>
<p>$$ \max \limits_{w,b} \gamma  \\ s.t. \ \ \  y_i (\frac{w}{|w|} \centerdot x + \frac{b}{|w|}) \geqslant  \gamma $$</p>
<p>用函数间隔替换如下: </p>
<p>$$ \max \limits_{w,b} \frac{\widehat {\gamma}}{| w |}   \\ s.t. \ \ \  y_i (w \centerdot x + b ) \geqslant  \widehat{\gamma} $$</p>
<p>可以令 $\widehat{\gamma} = 1$,  则有: </p>
<p>$$ \max \limits_{w,b} \frac{1}{| w |}   \\ s.t. \ \ \  y_i (w \centerdot x + b ) \geqslant  1 $$</p>
<p>也就是: </p>
<p>$$ \min \limits_{w,b} \frac{1}{2}{| w |}^2   \\ s.t. \ \ \quad  y_i (w \centerdot x + b ) \geqslant  1 \quad i \in { 1, 2, … , N }$$</p>
<p><code>也就是可以理解为</code> :  我们需要寻找合适的$w, b$，对应着一个超平面，使得所有的样本点到其的函数间隔都大于1；同时使得$|w|$最小</p>
<p>上述方程的一个优化方法是:  通过对偶方法构造原来不等式的等价最优解（也就是拉格朗日对偶函数，具体太复杂了，就(也不懂)不展开了) ，总之如上的约束条件的等价对偶问题为:</p>
<p>$$ \min \limits_{\alpha} \frac{1}{2} \sum_{i=1}^{N}\sum_{i=1}^{N} \alpha_i \alpha_j y_iy_j - \sum_{i=1}^N\alpha_i \\ s.t. \quad \sum_{i=1}^{N} \alpha_iy_i = 0 \\ a_i (y_i(w*x_i + b) - 1) =0 \\ \\ w = \sum_{i=1}^{N} \alpha_i x_i y_i \\ a_i \geqslant 0 \quad i \in { 1, 2, … , N } $$<br>(可以忽略$\alpha_i$ 为什么会出现)</p>
<p>这里我们称令$a_i &gt; 0$ 成立的样本点为<code>支持向量</code>, 依照上面的定义，当$a_i &gt; 0 $时，则有: </p>
<p>$$ y_i(w*x_i + b) - 1 =0$$</p>
<p>也就是$x_i$ 一定是在间隔的边界</p>
<h3 id="线性不可分情况"><a href="#线性不可分情况" class="headerlink" title="线性不可分情况"></a>线性不可分情况</h3><p>考虑到现实生活中，存在一些异常或者脏数据，此时我们可以每个样本点引入一个松弛变量$\xi_i$,  则约束条件可以变为 : </p>
<p>$$ y_i (w \centerdot x_i + b ) \geqslant  1-\xi_i \quad i \in { 1, 2, … , N } $$</p>
<p>同时目标函数可以变成: </p>
<p>$$ \min \limits_{w,b} \frac{1}{2}{| w |}^2 + C \sum_{i=1}^{N} \xi_i$$</p>
<p>其中 : C代表着惩罚系数，需要视具体的业务场景而定 ；C值越大，表明对误差的惩罚增大，反之则减小；</p>
<p>忽略一些很复杂的计算，可以得到对偶问题如下: </p>
<p>$$ \min \limits_{\alpha} \frac{1}{2} \sum_{i=1}^{N}\sum_{i=1}^{N} \alpha_i \alpha_j y_iy_j - \sum_{i=1}^N\alpha_i \\ s.t. \quad \sum_{i=1}^{N} \alpha_iy_i = 0 \\  0 \leqslant a_i \leqslant C \quad i \in { 1, 2, … , N } $$</p>
<p>从上面可以分析出: </p>
<ul>
<li>$w$是确定且唯一的</li>
<li>$b$的解并不唯一</li>
</ul>
<h3 id="核函数及其应用"><a href="#核函数及其应用" class="headerlink" title="核函数及其应用"></a>核函数及其应用</h3><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><p><a href="https://zh.wikipedia.org/wiki/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA" target="_blank" rel="external">支持向量机</a></p>
</li>
<li><p><a href="https://en.wikipedia.org/wiki/Support_vector_machine" target="_blank" rel="external">Support vector machine</a> </p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;SVM的核心思想是，通过构造一个超平面将空间中的数据进行划分，可以用于分类，回归或者其他任务;&lt;/p&gt;
&lt;p&gt;一个直观的理解是: 我们构造的
    
    </summary>
    
    
      <category term="ml" scheme="http://shevacjs.com/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>关于CTR预估的算法</title>
    <link href="http://shevacjs.com/2017/07/21/ctr/"/>
    <id>http://shevacjs.com/2017/07/21/ctr/</id>
    <published>2017-07-20T16:25:11.000Z</published>
    <updated>2017-07-21T11:17:05.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>偏实践应用, by chenjiansen</p>
<p><code>WARN</code>, 个人理解, 应该是多有谬误</p>
</blockquote>
<h3 id="关于CTR预估"><a href="#关于CTR预估" class="headerlink" title="关于CTR预估"></a>关于CTR预估</h3><p>在很多推荐系统里面，rank是一个关键的环节；从不同召回源获取到的数据, 按照哪种排序方式推荐给用户是一个关键的问题; 所谓的<code>CTR预估</code>就是希望我们能对输出的list 做一个合适的点击预估; 抽象起来其实就是算一个item被点击的概率或者可能性；</p>
<p>这个问题映射为机器学习里面的算法，现在常见的，使用广泛的主要有如下几个算法: </p>
<h3 id="LR"><a href="#LR" class="headerlink" title="LR"></a>LR</h3><p>映射为LR算法，可以理解为，就是要预测一个算法被判为正例(‘click’)的概率；由于LR算法的输出是一个概率值, 所以可以直接用来sort;</p>
<p>同时LR由于具有比较好的实现和调试；是早期大家使用较为广泛的Rank算法;</p>
<h2 id="GBDT"><a href="#GBDT" class="headerlink" title="GBDT"></a>GBDT</h2><h2 id="FM"><a href="#FM" class="headerlink" title="FM"></a>FM</h2><p>考虑到我们这特征输入的时候，可能有如下几个问题: </p>
<ul>
<li>数据稀疏</li>
<li>特征之间存在一些关联性</li>
</ul>
<p>传统的LR算法的$h_\theta(x) = \theta^Tx$，显然可能不适合此类数据，一个简单是思路是引入二次项，包含关联关系的预估, 如下 : </p>
<p>$$y(x) = w_0 + \sum_{i=1}^nw_ix_i  + \sum_{i=1}^n \sum_{j=i+1}^n w_{ij}x_ix_j$$</p>
<p>这个表达共有$\frac{n(n-1)}{2}$个模型参数,  我们需要训练这么多参数，但是该表达式存在如下问题: </p>
<ul>
<li>由于每个$w_{ij}$ 都需要大量$x_i$和$x_j$非零的情况下进行预估，但是样本数据本来就比较稀疏，这将导致整个样本训练的难度非常大</li>
</ul>
<p>一个思路是: “所有二次项参数$w_{ij}$可以组成一个对称阵 $W$，那么这个矩阵就可以分解为 $W=V^TV=VV^T$，$V$ 的第 $j$ 列便是第 $j$维特征的隐向量。换句话说，每个参数 $w_{ij}=<v_i,v_j>$” ，所以上面可以转化为 : </v_i,v_j></p>
<p>$$y(x) = w_0 + \sum_{i=1}^nw_ix_i  + \sum_{i=1}^n \sum_{j=i+1}^n <v_i, v_j="">x_ix_j$$</v_i,></p>
<p>其中: </p>
<ul>
<li>$v_i$ : 是一个k阶的隐向量$(k &lt;&lt; n)$</li>
<li>$&lt; , &gt; $代表点积</li>
</ul>
<p>为了求上面式子的优化解，我们继续拆分有: </p>
<p>$$\sum_{i=1}^n \sum_{j=i+1}^n <v_i, v_j="">x_ix_j = \frac{1}{2} \sum_{f=1}^k( (\sum_{i=1}^n v_{i,f} x_i)^2 - \sum_{i=1}^nv_{i,f}^2x_i^2)$$</v_i,></p>
<p>可以证明FM参数的训练模型是$0(kn)$</p>
<h3 id="FFM"><a href="#FFM" class="headerlink" title="FFM"></a>FFM</h3><p>基于FM，我们再分析他模型可能存在的问题:  </p>
<p>在FM模型里面，我们为每个特征定义一个隐向量$\overrightarrow{v_i}$ , $\overrightarrow{v_i}$ 的估计是基于和其他参数的$\overrightarrow{v_j}$的相关性计算而成；这里面就有一个假设，就是任何其他特征对改特征的影响是一致的；但有时候，这个假设不一定合适；所以，我们引入所谓的<code>Field-aware Factorization Machine</code></p>
<p>在FFM模型里面，每个特征都属于某个field; 所以隐向量不仅和特征有关，也和field有关; 假设样本的 n 个特征属于 f个field，那么FFM的二次项有 nf 个隐向量。而在FM模型中，每一维特征的隐向量只有一个。FM可以看作FFM的特例，是把所有特征都归属到一个field时的FFM模型。其方程可以表达为: </p>
<p>$$y(x) = w_0 + \sum_{i=1}^nw_ix_i  + \sum_{i=1}^n \sum_{j=i+1}^n <v_{i,f_j}, v_{j,f_i}="">x_ix_j$$</v_{i,f_j},></p>
<p>其中: </p>
<ul>
<li>$f_j$是第$j$个特征所属的<code>field</code></li>
<li>$v_{i,j}$ 表明特征$i$,和 $j$ ，对应的隐向量，其中 $ j \in {  1, 2, 3, … , f }$</li>
</ul>
<p>可以看到FFM模型，共有<code>nfk</code>个待学习参数, 其预测复杂度是 $O(kn^2)$</p>
<p>关于FM和FFM，本质上，都是希望寻找一个模型，能够表征不同特征直接的关联关系；<code>FFM</code>可以理解是在具体应用上面的一个折衷；具有较好的可适应性</p>
<h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><h4 id="FFM-如何落地应用"><a href="#FFM-如何落地应用" class="headerlink" title="FFM 如何落地应用"></a>FFM 如何落地应用</h4><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><p><a href="https://www.zhihu.com/question/26154847" target="_blank" rel="external">广告ctr预估有什么值得推荐的论文？</a> : 好多资料</p>
</li>
<li><p><a href="http://tech.meituan.com/deep-understanding-of-ffm-principles-and-practices.html" target="_blank" rel="external">深入FFM原理与实践</a> : 关于<code>FM</code>和<code>FFM</code>的介绍，说的挺清楚的，主要是参考他理解的</p>
</li>
<li><p><a href="http://www.jianshu.com/p/005a4e6ac775" target="_blank" rel="external">GBDT：梯度提升决策树</a> : </p>
</li>
<li><p><a href="https://www.csie.ntu.edu.tw/~cjlin/libffm/" target="_blank" rel="external">LIBFFM: A Library for Field-aware Factorization Machines</a> : 关于FFM</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;偏实践应用, by chenjiansen&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WARN&lt;/code&gt;, 个人理解, 应该是多有谬误&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;关于CTR预估&quot;&gt;&lt;a href=&quot;#关于CTR预估&quot; class=&quot;h
    
    </summary>
    
    
      <category term="ml" scheme="http://shevacjs.com/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>关于贝叶斯分类</title>
    <link href="http://shevacjs.com/2017/07/21/bayes/"/>
    <id>http://shevacjs.com/2017/07/21/bayes/</id>
    <published>2017-07-20T16:25:11.000Z</published>
    <updated>2017-07-21T11:17:33.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>by chenjiansen</p>
</blockquote>
<h3 id="判定模型与生成模型"><a href="#判定模型与生成模型" class="headerlink" title="判定模型与生成模型"></a>判定模型与生成模型</h3><p>判定模型的理论基础 :</p>
<p>$$ y = p(y | x : \theta) $$</p>
<p>生成模型</p>
<p>$$ y = p( y | x) = p(x,y) / p(x) = p(x|y) p(y) / p(x) $$</p>
<p>此时我们会考虑使用$p(x|y)p(y)$ 来评估$p(y|x)$ ，是一个联合概率的考虑</p>
<h3 id="Native-Bayes"><a href="#Native-Bayes" class="headerlink" title="Native Bayes"></a>Native Bayes</h3><p>考虑判断一个邮件是否是垃圾邮件；我们设定如下的模型: </p>
<ul>
<li>$x$ 为输入向量；其中$x_i^{(j)}$ 表示第$i$个样本的第$j$维的特征值,  任何一个邮件可以用如下的形式表示 : </li>
</ul>
<p>$$x=\left[ \begin{array}{cc} 0 &amp; a_0\\ 1 &amp; a_1 \\ 1 &amp; a_2\\ 0  &amp; a_3 \\ 1 &amp; a_4 \\ .. &amp; .. \end{array} \right]$$</p>
<p>其中第$i$行代表着单词$a_i$是否出现在这个邮件里面；$|A|$ 表示着词汇量的个数，也是也是输入特征$x$的维度</p>
<ul>
<li>$y$为输入结果,  这里面设定 $y=1$为垃圾邮件，否则$y=0$</li>
</ul>
<p>这里，我们准备使用<code>朴素贝叶斯</code>的方法解决分类问题，如上面生成模型的说明, 我们的求解问题转化为:</p>
<p>$ p(y|x) = p(x|y) p(y) / p(x) $</p>
<p>我们约定如下: </p>
<p>$$\phi_{i|y=1} = p(x_i = 1 | y = 1)$$<br>$$\phi_{i|y=0} = p(x_i = 1 | y = 0)$$<br>$$\phi_y = p(y = 1) $$</p>
<p>则有 : </p>
<p>$$ \phi_{i|y=1} = \frac{\sum_{i=0}^{m} 1 {x_j^{(i)} = 1 \ and \  y^{(i)} = 1}}{\sum_{i=0}^{m} 1 { y^{(i)} = 1}}$$</p>
<p>其他的$\phi_{i|y=0} , \phi_y$ 同理易得</p>
<p>则在样本输入${x^{(i)}, y^{(i)}}, i = 0, 1, 2 …$ 的情况下；对于上面的分类问题，我们可以先求解:</p>
<p>$$ P(y=1\ |x) = P(x|y=1) P(y=1) / P(x) \\ = \frac{ (\prod_{i=0}^{m}P(x_i\ |y = 1)) P(y=1)}{ (\prod_{i=0}^{m}P(x_i\ |y = 1)) + (\prod_{i=0}^{m}P(x_i\ |y = 0))}$$</p>
<p>上面的$\prod$ 展开是依赖于所谓的<code>贝叶斯假设</code>， 也就是对于给定的结果$y$, 事件$x_i$相对于$y$是独立分布的, 也就是有: </p>
<p>$$P(x_1,x_2,…,x_n\ |\ y) = p(x_1|y)p(x_2|y,x_1)….p(x_n|y,x_1,x_2, …) \\ = p(x_1|y)p(x_2|y) … p(x_n|y) \\ = \prod_{i=1}^{n} p(x_i|y)$$</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://guangchun.wordpress.com/2011/10/13/ml-bayes-map/" target="_blank" rel="external">参数估计：最大似然、贝叶斯与最大后验</a> </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;by chenjiansen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;判定模型与生成模型&quot;&gt;&lt;a href=&quot;#判定模型与生成模型&quot; class=&quot;headerlink&quot; title=&quot;判定模型与生成模型&quot;&gt;&lt;/a&gt;判定模型与生成模型&lt;
    
    </summary>
    
    
      <category term="ml" scheme="http://shevacjs.com/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>Supervised learning ： Linear Regression</title>
    <link href="http://shevacjs.com/2017/07/21/Supervised_Learning/"/>
    <id>http://shevacjs.com/2017/07/21/Supervised_Learning/</id>
    <published>2017-07-20T16:25:11.000Z</published>
    <updated>2017-07-21T11:16:08.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>chenjiansen from CS229 Lecture notes by Andrew Ng</p>
</blockquote>
<p>本文简单介绍下线性回归的基本思想和算法</p>
<h3 id="基本定义"><a href="#基本定义" class="headerlink" title="基本定义"></a>基本定义</h3><p>设有 :  </p>
<p>$$X = { x^{(1)},  x^{(2)}, … , x^{(m)} }$$<br>$$Y = { y^{(1)},   y^{(2)}, … , y^{(m)} }$$</p>
<p>X表示输入集合，Y则代表对应的输出，则对于任意$x^{(i)}$, 有$x^{(i)} = {x_1, x_2,x_3, … x_n }$, 也就是我们假设这个数据集有<code>m</code>个元素，每个元素是<code>n</code>个维度的</p>
<p>同时，目标预测函数满足线性回归，则我们的假设函数可以写成: </p>
<p>$$h_\theta(x) = \theta_0 + \theta_1x_1 + \theta_2x_2 + … + \theta_nx_n = \sum_{i=0}^{n}\theta_ix_i = \theta^TX$$</p>
<p>同时定义我们的<code>cost function</code> ，我们可以把他定义为<code>差的平方和</code>(具体后面会解释为什么可以这样定义) : </p>
<p>$$ J(\theta) = \frac{1}{2} \sum_{i=0}^m(h_{(\theta)}(x^{(i)}) - y^{(i)})^2$$</p>
<p>则我们的问题可以简化为, 给定数据集合$X, Y$,  求让$J(\theta)$ 最小的$\theta$</p>
<h3 id="优化算法"><a href="#优化算法" class="headerlink" title="优化算法"></a>优化算法</h3><p>最优化算法有非常多，这里面主要介绍两种最优化算法，包括<code>梯度下降法</code>和<code>最小二乘法</code>，下面分别说明 : </p>
<h4 id="梯度下降法"><a href="#梯度下降法" class="headerlink" title="梯度下降法"></a>梯度下降法</h4><p>考虑到上面定义的cost function，梯度下降法在这边的应用可以直接的表示为 : </p>
<p>$$ \theta_j : \theta_j - \alpha \frac{\partial}{\partial\theta} J(\theta)$$</p>
<p>其中$\alpha$表示下降的速度，$ j = { 0, 1, 2, … , n}$</p>
<p>下面我们来求解上面那个方程，简单起见，我们考虑只有一个样本的情况，如下: </p>
<p>$$ \frac{\partial}{\partial \theta} J(\theta) = \frac{1}{2} \ast 2 (h_{(\theta)}(x^{(i)}) - y^{(i)})  \ast \frac{\partial}{\partial\theta}{(h_{(\theta)}(x^{(i)} -y^{(i)})}$$</p>
<p>$$ = (h_{(\theta)}(x^{(i)}) - y^{(i)}) \ast \frac{\partial}{\partial\theta}{(\theta^TX -y^{(i)})} $$</p>
<p>$$ = (h_{(\theta)}(x^{(i)}) - y^{(i)}) \ast  x_j$$</p>
<p>也就是可以表示为:<br>$$ \theta_j =  \theta_j + \alpha \ast (h_{\theta}(x^{(i)}) - y^{(i)}) \ast  x_j $$</p>
<p>则一般在实际应用的时候，可以有两个办法：</p>
<p>第一个办法称为<code>batch gradient descent</code>,  大概算法如下 : </p>
<p>Repeat until convergence {<br>$$\theta_j = \theta_j + \alpha \sum_{i=0}^{m}( y^{(i)} - h_{\theta}(x^{(i)}) $$<br>[ for every j ]<br>}</p>
<p>第二个办法成为<code>incremental gradient descent</code> , 大概形式如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Loop &#123;</div><div class="line">	for i = 1 to m &#123;</div></pre></td></tr></table></figure></p>
<p>$        \theta_j = \theta_j + \alpha \ast ( y^{(i)} - h_{\theta}(x^{(i)})  $ ( for every j)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>可以看到: </p>
<ul>
<li><p>批量梯度下降: 最小化所有训练样本的损失函数，使得最终求解的是全局的最优解，即求解的参数是使得风险函数最小，但是对于大规模样本问题效率低下；每迭代一次需要的计算量约为<code>m*n^2</code>，如果m很大的话，性能上面会有比较大的压力</p>
</li>
<li><p>随机梯度下降 : 最小化每条样本的损失函数，虽然不是每次迭代得到的损失函数都向着全局最优方向， 但是大的整体的方向是向全局最优解的，最终的结果往往是在全局最优解附近，适用于大规模训练样本情况。</p>
</li>
</ul>
<h4 id="最小二乘法"><a href="#最小二乘法" class="headerlink" title="最小二乘法"></a>最小二乘法</h4><p>上面的优化问题，也可以用最小二乘法求解，依照输入的情况，我们定义如下几个变量 :</p>
<ul>
<li>矩阵 A :  m*n矩阵， 行向量 $x^{(j)}  $ 代表一个样本 </li>
<li>向量$\overrightarrow{\theta}$ : n*1 向量，也就是我们要求解的参数向量</li>
<li>向量 $\overrightarrow{y}$ :  m*1 向量，每个元素$y^{(i)}$, 对应着输入样本$x^{(i)}$的值</li>
</ul>
<p>则我们的问题可以转换为，求解向量$\overrightarrow{\theta}$, 使得 : </p>
<p>$$ A \overrightarrow {\theta} = \overrightarrow{y} $$</p>
<p>有最优解或者有解；无论矩阵A是否可逆那个，我们知道最小二乘的解为 (具体证明下面另述):</p>
<p>$$ \overrightarrow {\theta} = (A^TA)^{(-1)} A^T \overrightarrow{y} $$ </p>
<blockquote>
<p>个人理解: 缺点应该是整体的计算量会非常大</p>
</blockquote>
<h3 id="概率解释"><a href="#概率解释" class="headerlink" title="概率解释"></a>概率解释</h3><p>上面说到，我们使用<code>least-squares function</code> 来定义我们的cost function；下面简单说明，如此定义的合理性；</p>
<p>首先，对于预测结果和实际结果的关系，我们可以用如下式子说明 : </p>
<p>$$ y^{(i)} = \theta^T x^{(i)} + \epsilon^{(i)}$$</p>
<p>其中 $\epsilon^{(i)}$ 代表着我们的预估结果误差；</p>
<p>现在我们假设$\epsilon^{(i)}$ 满足正态分布，也就是$\epsilon^{(i)} \sim \aleph (0, \sigma^2)$ , 则有: </p>
<p>$$ p(y^{(i)} |  x^{(i)}, \theta ) = \frac{1}{\sqrt{2\pi}\sigma} exp (-\frac{(y^{(i)} - \theta^Tx^{(i)})^2}{2\sigma^2})$$</p>
<p>同样，现在我们面临的问题是，给定了集合${X, Y}$ , 需要预估一个合理的$\theta$,  所以我们定义似然函数如下: </p>
<p>$$ L(\theta) = L(\theta; X, \overrightarrow{y}) = p(\overrightarrow{y} | X; \theta)$$</p>
<p>如上，我们考虑到所有的$\epsilon^{(i)}$ 是独立的，所以有 ： </p>
<p>$$L(\theta) = \prod_{i=1}^{m} \frac{1}{\sqrt{2\pi}\sigma} exp (-\frac{(y^{(i)} - \theta^Tx^{(i)})^2}{2\sigma^2}) $$</p>
<p>现在就是要求这个函数的最大值, 我们求解<code>log likehood</code>的情况: </p>
<p>$$ l(\theta) = log L(\theta) = log \prod_{i=1}^{m} \frac{1}{\sqrt{2\pi}\sigma} exp (-\frac{(y^{(i)} - \theta^Tx^{(i)})^2}{2\sigma^2})  $$</p>
<p>$$ = \sum_{i=0}^{m} log \frac{1}{\sqrt{2\pi}\sigma} exp (-\frac{(y^{(i)} - \theta^Tx^{(i)})^2}{2\sigma^2})$$</p>
<p>$$ = m  \ast log \frac{1}{\sqrt{2\pi}\sigma}  - \frac{1}{\sigma^2} \ast \frac{1}{2} \sum_{i=1}^{m}(y^{(i)} - \theta^Tx^{(i)})^2$$</p>
<p>也就是令 $\frac{1}{2} \sum_{i=1}^{m}(y^{(i)} - \theta^Tx^{(i)})^2 $为最小值的时候其概率最大； 正好对应着我们定义的<code>cost function</code></p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li><a href="http://www.cnblogs.com/maybe2030/p/4751804.html" target="_blank" rel="external">常见的几种最优化方法</a> : 几个常见的优化算法，说的非常详细</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;chenjiansen from CS229 Lecture notes by Andrew Ng&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文简单介绍下线性回归的基本思想和算法&lt;/p&gt;
&lt;h3 id=&quot;基本定义&quot;&gt;&lt;a href=&quot;#基本定义&quot;
    
    </summary>
    
    
      <category term="ml" scheme="http://shevacjs.com/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>关于AdaBoost&amp;Boosting</title>
    <link href="http://shevacjs.com/2017/07/21/boosting/"/>
    <id>http://shevacjs.com/2017/07/21/boosting/</id>
    <published>2017-07-20T16:25:11.000Z</published>
    <updated>2017-07-27T17:29:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>核心思想 : 用于将一些弱的分类器组合起来, 提升分类的性能;</p>
<h3 id="About-AdaBoost"><a href="#About-AdaBoost" class="headerlink" title="About AdaBoost"></a>About AdaBoost</h3><p>AdaBoost的算法归纳如下: </p>
<p>假设输入样本如下: </p>
<p>$${ (x_1, y_1,), … (x_n, y_n) }$$</p>
<p>且 $y \in  { -1, 1}$</p>
<p>且我们有弱分类器: ${k_1, k_2, .. k_L }$ ，则$k_j(x_i)$ 表示 $j$ 分类器对输入$x_i$的分类结果</p>
<p>则在$m-1$次迭代之后，我们的boost分类器可以表达如下: </p>
<p>$$C_{(m-1)}(x_i) = \alpha_1k_1(x_i) + … + \alpha_{m-1}k_{m-1}(x_i)$$</p>
<p>对第m次迭代后，我们的目标分类器的表达式可以表述为: </p>
<p>$$C_m(x_i) = C_{(m-1)}(xi) + \alpha_mk_m(x_i)$$</p>
<p>则问题转化为: 我们需要明确$\alpha_m$ 和 $k_m$的值 ;</p>
<p>设我们的损失函数定义如下: (<code>mark</code>)</p>
<p>$$E = \sum_{i=1}^n e^{-y_iC_m(x_i)}$$</p>
<p>令$w_i^{(1)} = 1, w_i^{(m)} = e^{-y_iC_{m-1}(x_i)}$, 则有: </p>
<p>$$ E = \sum_{i=1}^n w_i^{(m)} e^{-y_i\alpha_mk_m(x_i)}$$</p>
<p>由于$y_i*k_m(x_i) \in { -1, 1 }$,  则有:</p>
<p>$$ E = \sum _{yi=k_m(x_i)} w_i^{(m)}e^{-\alpha_m} + \sum _{yi \neq k_m(x_i)} w_i^{(m)}e^{\alpha_m} $$<br>$$ = \sum_{i=1}^N w_i^{(m)}e^{-\alpha_m} + \sum _{yi \neq k_m(x_i)} w_i^{(m)} (e^{\alpha_m}   - e^{-\alpha_m} )$$</p>
<p>从而可以看到我们关注的$k_m$对E的影响，仅表现在等式右侧,  其需要最小化$\sum _{yi \neq k_m(x_i)} w_i^{(m)}$ </p>
<p>在考虑$\alpha_m$的取值: </p>
<p>$$\frac{d E}{d \alpha_m} = - \sum _{yi=k_m(x_i)} w_i^{(m)}e^{-\alpha_m} + \sum _{yi \neq k_m(x_i)} w_i^{(m)}e^{\alpha_m}  $$</p>
<p>令其取值为0； 则有: </p>
<p>$$ \alpha_m = \frac{1}{2} \ln( \frac{\sum _{yi=k_m(x_i)} w_i^{(m)} }{\sum _{yi \neq k_m(x_i)} w_i^{(m)}}$$</p>
<p>令 $\epsilon_m =  {\sum _{yi \neq k_m(x_i)} w_i^{(m)}} / \sum_{i=1}^n w_i^{(m)}$, 则有 : </p>
<p>$$ \alpha_m = \frac{1}{2} \ln(\frac{1-\epsilon_m}{\epsilon_m})$$</p>
<p>上面就是我们最常见的算法；</p>
<p>概述如下：</p>
<p>At each iteration, choose the classifier $k_{m}$ which minimizes the total weighted error :</p>
<p>$$\sum_{y_i \neq k_m(x_i)}w_i^m $$</p>
<p>use this to calculate the error rate </p>
<p>$$\epsilon_m=\sum_{y_{i}\neq k_{m}(x_{i})}w_{i}^m/\sum_{i=1}^{N}w_{i}^m$$</p>
<p>use this to calculate the weight<br>$$\alpha_m = \frac{1}{2}\ln\left( \frac{1 - \epsilon_m}{\epsilon_m}\right)$$</p>
<p>and finally use this to improve the boosted classifier $C_NaN$ to $C_=C_NaN+\alpha _{m}k_{m}$<br>上面所述全来自wiki:  <a href="https://en.wikipedia.org/wiki/AdaBoost" target="_blank" rel="external">https://en.wikipedia.org/wiki/AdaBoost</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;核心思想 : 用于将一些弱的分类器组合起来, 提升分类的性能;&lt;/p&gt;
&lt;h3 id=&quot;About-AdaBoost&quot;&gt;&lt;a href=&quot;#About-AdaBoost&quot; class=&quot;headerlink&quot; title=&quot;About AdaBoost&quot;&gt;&lt;/a&gt;About
    
    </summary>
    
    
      <category term="ml" scheme="http://shevacjs.com/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170716</title>
    <link href="http://shevacjs.com/2017/07/16/20170716/"/>
    <id>http://shevacjs.com/2017/07/16/20170716/</id>
    <published>2017-07-16T06:15:30.000Z</published>
    <updated>2017-07-21T06:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><ul>
<li><p><a href="https://www.microsoft.com/en-us/seeing-ai/" target="_blank" rel="external">Seeing AI</a> : 微软新出来的app, “A free app that narrates the world around you. Designed for the low vision community, this research project harnesses the power of AI to describe people, text and objects”</p>
</li>
<li><p><a href="https://news.ycombinator.com/item?id=14769762" target="_blank" rel="external">Redis 4.0 (groups.google.com)</a> : 感觉有不少特性值得关注，个人觉得有兴趣的包括:<code>PSYNC2</code>, <code>Redis modules</code>, <code>LFU eviction algorithm</code> , <code>MEMORY DOCTOR</code> 以及 <code>Active memory defragmentation</code></p>
</li>
</ul>
<h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><a href="https://paragonie.com/book/pecl-libsodium" target="_blank" rel="external">Using Libsodium in PHP Projects</a> : LibSodium是一个php的安全基础库，会成为PHP 7.2的标准扩展，对于安全的php编程意义重大</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;mid=2659599404&amp;idx=1&amp;sn=12c9a9da66286e398e5fd48fe338ad48" target="_blank" rel="external">携程的Web漏洞扫描系统实现细节</a> : 可以了解下, 总感觉很多关键点没说清楚，比如流量重放的脏数据问题,  数据镜像方案等(有点重)</p>
</li>
<li><p><a href="http://karpathy.github.io/neuralnets/" target="_blank" rel="external">Hacker’s guide to Neural Networks</a> : 关于深度学习的介绍，先mark</p>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/seeing-ai/&quot; targ
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170709</title>
    <link href="http://shevacjs.com/2017/07/09/20170709/"/>
    <id>http://shevacjs.com/2017/07/09/20170709/</id>
    <published>2017-07-09T06:15:30.000Z</published>
    <updated>2017-07-21T06:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><ul>
<li><a href="https://www.computer.org/csdl/mags/ic/2017/03/mic2017030012.html" target="_blank" rel="external">Two Decades of Recommender Systems at Amazon.com</a> : AWS关于他们推荐系统的介绍，可以好好学习</li>
</ul>
<h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><p><a href="http://nginx.org/en/docs/dev/development_guide.html#introduction" target="_blank" rel="external">Nginx Development guide</a> : Nginx官方的开发手册, 先mark</p>
</li>
<li><p><a href="https://blog.haschek.at/2017/how-to-defend-your-website-with-zip-bombs.html" target="_blank" rel="external">How to defend your website with ZIP bombs</a> : 通过<code>zip boom</code> 来应对一些恶意的扫描</p>
</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><a href="https://blog.acolyer.org/2017/06/29/twitter-heron-towards-extensible-streaming-engines/" target="_blank" rel="external">Twitter Heron: towards extensible streaming engines</a> : Heron是一个Twritter开源的实时流解决方案，相比于storm/spark, 其特点是可插拔的组件架构, 感觉整个设计理念可以学习下; 同时还可以关注<a href="https://blog.acolyer.org/2017/06/30/dhalion-self-regulating-stream-processing-in-heron/" target="_blank" rel="external">Dhalion: self-regulating stream processing in Heron</a> 另外一个系统，目标是致力于让Heron变成一个<code>self-regulating</code>系统</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><p><a href="https://startupsventurecapital.com/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5" target="_blank" rel="external">Essential Cheat Sheets for Machine Learning and Deep Learning Engineers</a> : 好几个cheat sheets, 感觉挺不错的</p>
</li>
<li><p><a href="https://joshondesign.com/2017/07/02/hire_old_programmer" target="_blank" rel="external">Five Reasons Why You Should Hire an Old Programmer</a> : 可以当做自己需要去培养的能力，包括<code>Experience</code>, <code>Judgement</code>, <code>Deep Knowledge</code>, <code>Wide Knowledge</code> 和 <code>Communication Skills</code></p>
</li>
<li><p><a href="https://www.kernel.org/doc/html/v4.10/process/coding-style.html" target="_blank" rel="external">Linux kernel coding style</a> : linux内核的编码风格, 大部分的编码方式自己还是比如认同了；除了括号的换行要求</p>
</li>
<li><p><a href="https://www.leiphone.com/news/201707/86tSZrqgcVFXEfnc.html" target="_blank" rel="external">谷歌大神Jeff Dean对话Talking Machine：我们要推动机器学习再上一层楼</a> : 佩服的人</p>
</li>
<li><p><a href="http://www.yinwang.org/blog-cn/2017/07/06/master-pl" target="_blank" rel="external">如何掌握所有的程序语言</a> : 王垠的新文章，关于如何学习所有语言的, 可以试试”自己实现所有的语言特性”, 相关推荐的文章包括<a href="https://www.zhihu.com/question/62097662" target="_blank" rel="external">知乎: 如何评价王垠新博文《如何掌握所有的程序语言》？</a> 以及 <a href="http://www.yinwang.org/blog-cn/2017/05/23/kotlin" target="_blank" rel="external">Kotlin 和 Checked Exception</a> 介绍checked exception</p>
</li>
<li><p><a href="https://medium.com/@matelabs_ai/public-data-sets-use-these-to-train-machine-learning-models-on-mateverse-4dda18a27851" target="_blank" rel="external">Public Data Sets: Use these to train Machine Learning models on Mateverse</a> : 推荐的一些公开的dataset, mark下</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.computer.org/csdl/mags/ic/2017/03/mic20
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170702</title>
    <link href="http://shevacjs.com/2017/07/02/20170702/"/>
    <id>http://shevacjs.com/2017/07/02/20170702/</id>
    <published>2017-07-02T06:15:29.000Z</published>
    <updated>2017-07-21T06:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><ul>
<li><a href="https://news.ycombinator.com/item?id=14663790" target="_blank" rel="external">Analysis of the Alexa Top 1M sites (mozilla.org)</a> : 对前100W流量的网站的安全设施的分析(包括http头部, csp策略等), 总体的结论是，趋势来看，网站的安全保障性是越来越好的; 评论上面两个论点可以关注，其一是<a href="https://ejj.io/cost-of-security-headers/" target="_blank" rel="external">The Cost Of Security Headers</a> 注重说明 任何安全设施都不是免费午餐, 落地实践需要考虑相关的副作用，包括<code>HTTP Public Key Pinning (HPKP)</code> 或者 <code>HTTP Strict Transport Security</code>, 另外是一个paper, <a href="https://www.sba-research.org/wp-content/uploads/publications/usenixTLSpreprint.pdf" target="_blank" rel="external">On the Usability of Deploying HTTPS</a> 讨论https落地部署的可行性(包括简便，可持续等)</li>
</ul>
<ul>
<li><a href="https://github.com/Microsoft/ELL" target="_blank" rel="external">Microsoft: Embedded Learning Library</a> : The Embedded Learning Library (ELL) allows you to build and deploy machine-learned pipelines onto embedded platforms, like Raspberry Pis, Arduinos, micro:bits, and other microcontrollers. </li>
</ul>
<h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><p><a href="https://engineering.talkdesk.com/stream-processing-metamorphosis-9b97f75097a" target="_blank" rel="external">Stream Processing Metamorphosis - A Kafka’s tale</a> : 可以理解是kafka的软文, 现在对kafaka印象也是不错的</p>
</li>
<li><p><a href="https://0x0d.im/archives/get-visitor-qq-number-through-dns-rebinding.html" target="_blank" rel="external">通过 DNS Rebinding 获取访客 QQ 号</a> : 对Mac QQ的漏洞的介绍, 好像此漏洞已经修复了, 不过里面的两个推荐文章可以关注，包括<a href="https://ricterz.me/posts/Use%20DNS%20Rebinding%20to%20Bypass%20IP%20Restriction" target="_blank" rel="external">Use DNS Rebinding to Bypass IP Restriction</a> 和 <a href="http://blog.knownsec.com/2015/03/jsonp_security_technic/" target="_blank" rel="external">JSONP 安全攻防技术</a></p>
</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650996610&amp;idx=1&amp;sn=f5f59cfe8ab83613600b9efc0906d5c5" target="_blank" rel="external">微信后台基于时间序的海量数据冷热分级架构设计实践</a> : 感觉非常奇怪的设计，微信的几个系统设计感觉都非常奇怪；脱离社区，可用性扩展性感觉偏弱；不知道是不是真的是因为他们的流量太大导致还是其他方面的因素</p>
</li>
<li><p><a href="http://tech.meituan.com/thrifycopy_and_faultdrill_system.html" target="_blank" rel="external">美团点评酒店后台故障演练系统</a> : 在线压测的系统看过很多，总感觉没有特别满意和靠谱的，大多数系统的普适性都不是很强</p>
</li>
<li><p><a href="http://ticki.github.io/blog/how-lz4-works/" target="_blank" rel="external">How LZ4 works</a> : LZ4的工作机制和原理, mark，没完成看懂</p>
</li>
<li><p><a href="https://fly.io/articles/why-fast-pages-are-important/" target="_blank" rel="external">Why App Speed Matters: Revenue</a> : 关于速度和收入的关系, 有个不是那么完美的论述</p>
</li>
<li><p><a href="https://news.ycombinator.com/item?id=14670602" target="_blank" rel="external">Apache RocketMQ</a> : 阿里开源解决方案RocketMQ的介绍</p>
</li>
<li><p><a href="https://blog.vivekpanyam.com/scaling-a-web-service-load-balancing/" target="_blank" rel="external">Scaling a Web Service: Load Balancing</a> : 对LB的介绍还是非常系统</p>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><p><a href="http://www.freebuf.com/news/137844.html" target="_blank" rel="external">Google和必应都无法替代的10大深网搜索引擎</a> : 先mark，里面的东西可以试试</p>
</li>
<li><p><a href="https://news.ycombinator.com/item?id=14642193" target="_blank" rel="external">How https works</a> : 关键看评论, 里面推荐了不少干货和问题</p>
</li>
<li><p><a href="http://xyz.insightdataengineering.com/blog/pipeline_map/" target="_blank" rel="external">Interactive map for architecting big data pipelines</a> : 交互式的大数据的技术栈的展示</p>
</li>
<li><p><a href="https://ying-zhang.github.io/cloud/2017/spanner-truetime-cap/" target="_blank" rel="external">Spanner, TrueTime 和CAP理论</a> : 英文的翻译版，可以加上对spanner设计的理解</p>
</li>
<li><p><a href="https://www.zhihu.com/question/20830906/answer/190831888" target="_blank" rel="external">deep learning 可以用来做推荐系统吗？</a> : 可以了解下</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=14663790&quot; targ
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170625</title>
    <link href="http://shevacjs.com/2017/06/25/20170625/"/>
    <id>http://shevacjs.com/2017/06/25/20170625/</id>
    <published>2017-06-25T06:15:29.000Z</published>
    <updated>2017-07-21T06:46:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><p><a href="https://monkeylearn.com/blog/introduction-to-support-vector-machines-svm/" target="_blank" rel="external">An introduction to Support Vector Machines (SVM)</a> :  对SVM的概要介绍</p>
</li>
<li><p><a href="https://monkey.org/~marius/unix-tools-hints.html" target="_blank" rel="external">HINTS FOR WRITING UNIX TOOLS</a> : 写unix tool的一些建议和技巧，包括<code>Consume input from stdin, produce output to stdout</code>, <code>Output should be simple to parse and compose</code> 等</p>
</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><a href="http://geek.csdn.net/news/detail/203834" target="_blank" rel="external">基于Spark的大规模机器学习在微博的应用</a> : 微博的machine learning在saprk方面的实践, 感觉微博的确在技术深度和公司还是有不少差距，但是其方案相对开源，也更符合业务大部分公司的需求, mark</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><p><a href="http://liblb.com/index.html" target="_blank" rel="external">An Empirical Study of Load Balancing Algorithms</a> : 对于几个常见但是有用的负载均衡算法的介绍, 包括<code>Round-Robin</code>, <a href="http://liblb.com/p2c.html" target="_blank" rel="external">Two Random Choices</a>, <a href="http://liblb.com/consistent.html" target="_blank" rel="external">Consistent Hashing</a>, <a href="http://liblb.com/bounded.html" target="_blank" rel="external">Bounded Consistent Hashing</a> 感觉还是很有用的，可以收藏先</p>
</li>
<li><p><a href="https://github.com/RedisLabsModules/redis-ml" target="_blank" rel="external">Machine Learning Model Server on Redis</a> : Redis的机器学习扩展, “Redis-ML is a Redis module that implements several machine learning models as Redis data types”, 可以见中文介绍 <a href="https://mp.weixin.qq.com/s/P2XXF9Y7gEJwsFHiHIAVpw" target="_blank" rel="external">用Redis-ML模块实现实时机器学习!</a></p>
</li>
<li><p><a href="https://conferences.oreilly.com/velocity/vl-ca/public/schedule/proceedings" target="_blank" rel="external">O’Reilly Velocity Conferences Sliders</a> : 一些PPT材料，先mark，后续抽时间统一看下</p>
</li>
<li><p><a href="http://binarypuzzle.com/index.php" target="_blank" rel="external">Binary Puzzle</a> : 类似于数独的游戏</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;h2 id=&quot;工具技巧&quot;&gt;&lt;a href=&quot;#工具技巧&quot; class=&quot;headerlink&quot; title=&quot;工具技巧&quot;&gt;&lt;/a&gt;工具技
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170618</title>
    <link href="http://shevacjs.com/2017/06/18/20170618/"/>
    <id>http://shevacjs.com/2017/06/18/20170618/</id>
    <published>2017-06-18T12:30:54.000Z</published>
    <updated>2017-07-21T05:42:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/IMG_1918.JPG" alt=""></p>
<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><a href="http://jm.taobao.org/2017/06/01/20170601/" target="_blank" rel="external">就是要你懂 TCP | 最经典的TCP性能问题</a> : 阿里中间件的blog，关于TCP的几个问题说明的还是很清楚的</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/CkDzLZCXOF6zzrn6_dd6Jw" target="_blank" rel="external">独家 | 一文读懂特征工程</a> : 关于特征工程的多方面建设，个人觉得还是非常有参考价值的</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MjM5ODIzNDQ3Mw==&amp;mid=2649967097&amp;idx=1&amp;sn=5836cc78f3d03e06975a94976ab1e102&amp;chksm=beca39ff89bdb0e91eba2f94af53e5af16b78fdd527cba3a08d1da0d8a9a47cb5b52ea9c3307#rd" target="_blank" rel="external">做大数据，需要知道的数据流算法集锦</a> : 一些实时流的数值统计算法, 个人感觉整体的思路是</li>
</ul>
<a id="more"></a>
<ul>
<li><p><a href="http://www.infoq.com/cn/articles/progress-of-real-time-offline-fusion-in-vip" target="_blank" rel="external">实时离线融合在唯品会的进展</a> : 整体拆分思路还是比较认同的</p>
</li>
<li><p><a href="http://www.infoq.com/cn/interviews/interview-with-fulili-talk-data-source-user-behavior-analysis?utm_source=infoq&amp;utm_medium=videos_homepage&amp;utm_campaign=videos_row3" target="_blank" rel="external">神策数据付力力：专注于数据源与用户行为分析</a> : 重点看采访的内容，整个数据体系的建设理念，个人比较认同</p>
</li>
<li><p><a href="http://geek.csdn.net/news/detail/202634" target="_blank" rel="external">Etsy 数据科学主管洪亮劼带你读：WWW 2017 精选论文</a> : 先mark</p>
</li>
<li><p><a href="https://github.com/Tencent/angel" target="_blank" rel="external">A Flexible and Powerful Parameter Server for large-scale machine learning</a> : Angel是一个基于参数服务器（Parameter Server）理念开发的高性能分布式机器学习平台</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/IMG_1918.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;h2 id=&quot;工具技巧&quot;&gt;&lt;a href=&quot;#工具技巧&quot; class=&quot;headerlink&quot; title=&quot;工具技巧&quot;&gt;&lt;/a&gt;工具技巧&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jm.taobao.org/2017/06/01/20170601/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;就是要你懂 TCP | 最经典的TCP性能问题&lt;/a&gt; : 阿里中间件的blog，关于TCP的几个问题说明的还是很清楚的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;系统设计&quot;&gt;&lt;a href=&quot;#系统设计&quot; class=&quot;headerlink&quot; title=&quot;系统设计&quot;&gt;&lt;/a&gt;系统设计&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/CkDzLZCXOF6zzrn6_dd6Jw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;独家 | 一文读懂特征工程&lt;/a&gt; : 关于特征工程的多方面建设，个人觉得还是非常有参考价值的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5ODIzNDQ3Mw==&amp;amp;mid=2649967097&amp;amp;idx=1&amp;amp;sn=5836cc78f3d03e06975a94976ab1e102&amp;amp;chksm=beca39ff89bdb0e91eba2f94af53e5af16b78fdd527cba3a08d1da0d8a9a47cb5b52ea9c3307#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;做大数据，需要知道的数据流算法集锦&lt;/a&gt; : 一些实时流的数值统计算法, 个人感觉整体的思路是&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170611</title>
    <link href="http://shevacjs.com/2017/06/11/20170611/"/>
    <id>http://shevacjs.com/2017/06/11/20170611/</id>
    <published>2017-06-11T12:30:54.000Z</published>
    <updated>2017-07-21T04:21:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><a href="https://www.bleepingcomputer.com/news/security/malware-uses-router-leds-to-steal-data-from-secure-networks/" target="_blank" rel="external">Malware Uses Router LEDs to Steal Data From Secure Networks</a> : 使用LED灯传递二进制信息, 信息传递的新方式, 挺有创意</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><p><a href="https://tech.okcupid.com/evaluating-perceptual-image-hashes-okcupid/" target="_blank" rel="external">Evaluating Perceptual Image Hashes at OkCupid</a> : 提出了一些新的hash算法，用于图片相似度的判断, mark</p>
</li>
<li><p><a href="https://engineeringblog.yelp.com/2017/06/making-photos-smaller.html" target="_blank" rel="external">Making Photos Smaller Without Quality Loss</a> : Yelp的图片压缩实践, 其中<code>Mozjpeg</code>的引入可以考虑下，是否和hiphoto一致</p>
</li>
<li><p><a href="https://medium.com/@giovannidamiola/making-the-internet-archives-full-text-search-faster-30fb11574ea9" target="_blank" rel="external">Making the Internet Archive’s full text search faster.</a> : Internet Archive的ES优化实践</p>
</li>
<li><p><a href="http://tech.youzan.com/redisji-qun-shi-xian-yuan-li-tan-tao/" target="_blank" rel="external">Redis集群实现原理探讨</a> : Redis集群的设计的概述，可以当做科普文</p>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><p><a href="http://blog.echen.me/2017/05/30/exploring-lstms/" target="_blank" rel="external">Exploring LSTMs</a> : 先mark</p>
</li>
<li><p><a href="http://aivarsk.github.io/2017/04/06/select/" target="_blank" rel="external">Using select(2)</a> : 感觉会是个好文章, 先mark, 注意其对应的链接</p>
</li>
<li><p><a href="https://github.com/sdmg15/Best-websites-a-programmer-should-visit" target="_blank" rel="external">Best-websites-a-programmer-should-visit</a> : “Some useful websites for programmers”, 几个news的新闻推荐挺不错的, 可以好好看看, <code>Interview Preparation</code> 上面的一些文件也挺有趣的</p>
</li>
<li><p><a href="http://www.pement.org/sed/sed1line.txt" target="_blank" rel="external">USEFUL ONE-LINE SCRIPTS FOR SED</a> : 不少sed技巧, 可以采纳</p>
</li>
<li><p><a href="https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/" target="_blank" rel="external">How Browsers Work: Behind the scenes of modern web browsers</a> : 是个干活，内容设计浏览器设计的方方面面，先mark</p>
</li>
<li><p><a href="https://www.cl.cam.ac.uk/~fms27/vck/" target="_blank" rel="external">Visual Cryptography Kit</a> : 基于可视化的加密, 还是挺有特色的</p>
</li>
<li><p><a href="http://www.brendangregg.com/ebpf.html" target="_blank" rel="external">Linux Enhanced BPF (eBPF) Tracing Tools</a> : 不少好的工具，也是只能先mark, 公司的系统支持还跟不上</p>
</li>
<li><p><a href="https://github.com/byoungd/english-level-up-tips-for-Chinese" target="_blank" rel="external">English-level-up-tips-for-Chinese</a> : 写给想提升英语水平的程序员, 有一些技巧可以关注，但个人认为这方面为有不断投入大量时间来学习才是OK的</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;h2 id=&quot;工具技巧&quot;&gt;&lt;a href=&quot;#工具技巧&quot; class=&quot;headerlink&quot; title=&quot;工具技巧&quot;&gt;&lt;/a&gt;工具技
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170604</title>
    <link href="http://shevacjs.com/2017/06/04/20170604/"/>
    <id>http://shevacjs.com/2017/06/04/20170604/</id>
    <published>2017-06-04T12:30:54.000Z</published>
    <updated>2017-07-21T04:21:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><ul>
<li><p><a href="https://news.ycombinator.com/item?id=14446350" target="_blank" rel="external">MySQL 8.0: Retiring Support for the Query Cache</a> : Mysql从8.0版本开始放弃对<code>query cache</code>的支持</p>
</li>
<li><p><a href="https://blog.chromium.org/2017/05/goodbye-pnacl-hello-webassembly.html" target="_blank" rel="external">Goodbye PNaCl, Hello WebAssembly!</a> : chrome开始全部拥抱webassembly，放弃之前的<code>PnaCl</code>的native code解决方案</p>
</li>
</ul>
<h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><a href="https://redditblog.com/2017/05/24/view-counting-at-reddit/" target="_blank" rel="external">View Counting at Reddit</a> : 介绍Reddit的浏览计数的方案, 其实他们的浏览计数就是<code>uv</code>的统计,  这需要对uid进行去重, Reddit使用了<a href="https://en.wikipedia.org/wiki/HyperLogLog" target="_blank" rel="external">HyperLogLog</a>的基数统计方法, 具体可以查看<a href="http://blog.csdn.net/yunlong34574/article/details/48494663" target="_blank" rel="external">HyperLogLog: 解读Cardinality Estimation算法</a>这篇文章的介绍, 另外redis本身也是支持<a href="http://antirez.com/news/75" target="_blank" rel="external">Hyperloglog</a></li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><a href="https://www.gitbook.com/book/0xax/linux-insides/details" target="_blank" rel="external">linux-insides</a> :  “A book-in-progress about the linux kernel and its insides.<br>“</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=14446350&quot; t
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170528</title>
    <link href="http://shevacjs.com/2017/05/28/20170528/"/>
    <id>http://shevacjs.com/2017/05/28/20170528/</id>
    <published>2017-05-28T12:30:52.000Z</published>
    <updated>2017-07-21T04:21:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><p><a href="https://nickcraver.com/blog/2016/02/17/stack-overflow-the-architecture-2016-edition/" target="_blank" rel="external">Stack Overflow: The Architecture - 2016 Edition</a> : 内容和设计上面没有太大的亮点，感觉可以关注的是其介绍架构的方法&amp;思路</p>
</li>
<li><p><a href="https://nickcraver.com/blog/2017/05/22/https-on-stack-overflow/#mistakes" target="_blank" rel="external">HTTPS on Stack Overflow: The End of a Long Road</a> : 还是stack overflow的文章, 具体介绍其迁移https的艰难历程</p>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/AIZQ5-F5AngdIESNCXngWw" target="_blank" rel="external">阿里下一代数据库技术：把数据库装入容器不再是神话</a> : 先mark</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;h2 id=&quot;工具技巧&quot;&gt;&lt;a href=&quot;#工具技巧&quot; class=&quot;headerlink&quot; title=&quot;工具技巧&quot;&gt;&lt;/a&gt;工具技
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170521</title>
    <link href="http://shevacjs.com/2017/05/21/20170521/"/>
    <id>http://shevacjs.com/2017/05/21/20170521/</id>
    <published>2017-05-21T12:30:52.000Z</published>
    <updated>2017-07-21T04:21:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><p><a href="https://blog.appcanary.com/2017/http-security-headers.html" target="_blank" rel="external">Everything you need to know about HTTP security headers</a> : 对Http的安全相关的头部有非常清楚的介绍&amp;说明, 可以了解下</p>
</li>
<li><p><a href="https://littlemaninmyhead.wordpress.com/2015/09/28/so-you-want-to-learn-to-break-ciphers/" target="_blank" rel="external">SO, YOU WANT TO LEARN TO BREAK CIPHERS</a> : i没介绍了几个常见的密码破译的方法，非常巧妙，mark下，可以好好学习</p>
</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><p><a href="https://blog.cloudflare.com/argo/" target="_blank" rel="external">Introducing Argo — A faster, more reliable, more secure Internet for everyone</a> : 智能的路由调度和层次cache</p>
</li>
<li><p><a href="https://news.ycombinator.com/item?id=14364516" target="_blank" rel="external">Real-Time Adaptive Image Compression</a> : 一个新的图片压缩算法, 思路是通过机器学习来明确优化&amp;转码的方向, 不过代码相关的好像没有开放出来</p>
</li>
<li><p><a href="https://news.ycombinator.com/item?id=14367311" target="_blank" rel="external">PostgreSQL 10 Beta 1 Released (postgresql.org)</a> : PostgreSQL感觉越来越强大，感觉在社区的影响力也越来越大</p>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;mid=2659599256&amp;idx=1&amp;sn=69388fb9efeb5931a9d37507e530e20b&amp;chksm=8be9968abc9e1f9c8eb843c70a232ca753f180c5e2e73f3a14ad7198dffc9f18cdc4b39e7009#rd" target="_blank" rel="external">聊聊云计算架构的几个设计原则</a> : 混合云是趋势, 需要考虑公有云如何和业务结合, 提出了一些需要去关注的东西</p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5ODI5Njc2MA==&amp;mid=2655809341&amp;idx=1&amp;sn=6ce58a1f1f83cee2bfb80fa77707e451&amp;chksm=bd7422ea8a03abfce3f003510566e23aa9f2ec2c25e97643b2773f9f85764d86056c3cb5a077#rd" target="_blank" rel="external">用户时代，小米数据工场如何做技术架构与数据处理</a> : 感觉一些细节的介绍很有用，比如说<code>数据管理</code>, <code>HDFS 目录管理</code>等</p>
</li>
<li><p><a href="https://hacks.mozilla.org/2017/02/a-crash-course-in-just-in-time-jit-compilers/" target="_blank" rel="external">A crash course in just-in-time (JIT) compilers</a> : 对JIT的机制介绍通俗易懂</p>
</li>
<li><p><a href="http://pythonforengineers.com/python-for-scientists-and-engineers/" target="_blank" rel="external">Python for Scientists and Engineers</a> : 看起来是不错的python入门书籍，可以mark下</p>
</li>
<li><p><a href="https://www.microsoft.com/en-us/research/project/transform-data-by-example/" target="_blank" rel="external">Transform Data by Example</a> : Excel提供的新的插件功能，可以支持你输入一些item的demo结果，自动补全其他item的结果，思路&amp;功能都是非常巧妙的</p>
</li>
<li><p><a href="http://rr-project.org/" target="_blank" rel="external">Mozilla: rr</a> : 之前有听过，但没有细了解，今天看了他的说明文档，感觉还是很给力的: “rr aspires to be your primary debugging tool, replacing — well, enhancing — gdb. You record a failure once, then debug the recording, deterministically, as many times as you want. The same execution is replayed every time. “</p>
</li>
<li><p><a href="https://news.ycombinator.com/item?id=14366070" target="_blank" rel="external">Ask HN: For those programming 10+ years, what do you wish you knew 4 years in?</a> : 最近挺喜欢看Hacker News上面的Ask, 干货感觉非常多, 不过看起来比较冗长，要有耐心</p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s/6OxDE-alfzWOz1DbmP2mPw" target="_blank" rel="external">来自Facebook的一些MySQL运维经验</a> : 都是干货, 可以采纳</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;h2 id=&quot;工具技巧&quot;&gt;&lt;a href=&quot;#工具技巧&quot; class=&quot;headerlink&quot; title=&quot;工具技巧&quot;&gt;&lt;/a&gt;工具技
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170514</title>
    <link href="http://shevacjs.com/2017/05/14/20170514/"/>
    <id>http://shevacjs.com/2017/05/14/20170514/</id>
    <published>2017-05-14T12:30:52.000Z</published>
    <updated>2017-07-21T04:21:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><ul>
<li><p><a href="http://weibo.com/ttarticle/p/show?id=2309404106694383811134" target="_blank" rel="external">计算机新硬件技术带来的变革与思考</a> : 可以了解，未来无限可能</p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s/2BKjeVpxSZB4REAhALrTHw" target="_blank" rel="external">如何看待 Google 最新的系统 Fuchsia？</a> : 作者认为<code>Fuchsia</code>是一个未来的操作系统，用于支持VR、AR等未来的交互方式</p>
</li>
<li><p><a href="https://android-developers.googleblog.com/2017/05/here-comes-treble-modular-base-for.html" target="_blank" rel="external">Here comes Treble: A modular base for Android</a> : Android准备引入了<code>Vendor Interface</code>, 以便低成本的支持应用程序在不同设备的迁移</p>
</li>
</ul>
<h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><p><a href="https://news.ycombinator.com/item?id=14321213" target="_blank" rel="external">When Bash scripts bite (janestreet.com)</a> : 在bash里面，需要对<code>set -euo pipefail</code> 谨慎使用</p>
</li>
<li><p><a href="http://www.brendangregg.com/blog/2017-05-09/cpu-utilization-is-wrong.html" target="_blank" rel="external">CPU Utilization is Wrong</a> : 作者认为我们通常说的<code>cpu utilization</code> 并不是cpu的真正利用率，其包括了cpu的cache等待时间; 我们应该更关注<code>IPC</code>(instructions-per-cycle), 通过这个指标我们可以分辨出系统的真正瓶颈(是不是cpu cahce可以优化等); 这中说法并不完全合理，但是也是理想系统的另外一个视角</p>
</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><a href="https://www.quora.com/How-does-Quora-use-machine-learning-in-2017/answer/Nikhil-Dandekar?utm_source=wanqu.co&amp;utm_campaign=Wanqu+Daily&amp;utm_medium=social" target="_blank" rel="external">How does Quora use machine learning in 2017?</a> : 具体谈到了<code>Quora</code> 如何利用ML的相关技术来优化他们的产品体验, 包括: 问题理解，推荐等场景; 里面还具体提到了<code>Quora</code>使用到的一些工具和lib，也可以采纳&amp;学习</li>
</ul>
<ul>
<li><a href="https://news.ycombinator.com/item?id=14314931" target="_blank" rel="external">How Cloudflare analyzes 1M DNS queries per second</a> : 非常好的文章, 重点是讨论通过使用<code>Kafka + ClickHouse</code> 来进行在线实时的大规模计算, 其中<a href="https://clickhouse.yandex/" target="_blank" rel="external">ClickHouse</a> 可以持续关注</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><p><a href="https://opensource.com/article/16/12/yearbook-9-lessons-25-years-linux-kernel-development" target="_blank" rel="external">9 lessons from 25 years of Linux kernel development</a> : 关于linux内核开发的一些建议和技巧，总结性的东西</p>
</li>
<li><p><a href="http://www.freebuf.com/articles/web/133455.html" target="_blank" rel="external">通过浏览器缓存来bypass nonce script CSP</a> : 利用浏览器缓存, 绕过<code>nonce script CSP</code>的一个方式</p>
</li>
<li><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650996187&amp;idx=1&amp;sn=f8ae2f2d0b84567004119e41e0a83646" target="_blank" rel="external">技术漫谈：为何KPI毁了索尼，而OKR却成就了谷歌？</a> : 对KPI &amp; OKR 的解释</p>
</li>
<li><p><a href="https://github.com/yandex/gixy" target="_blank" rel="external">GIXY:Nginx configuration static analyzer</a> : “Gixy is a tool to analyze Nginx configuration. The main goal of Gixy is to prevent security misconfiguration and automate flaw detection.”</p>
</li>
<li><p><a href="https://www.spinellis.gr/blog/20170510/" target="_blank" rel="external">Unix Architecture Evolution Diagrams</a> : 作者写了一个工具<a href="https://github.com/dspinellis/unix-architecture" target="_blank" rel="external">Unix Architecture Diagrams</a>, 其可以通过对源码的分析&amp;扫描，自动生成一个软件的架构图</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://weibo.com/ttarticle/p/show?id=23094041066
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>weekly of 20170507</title>
    <link href="http://shevacjs.com/2017/05/07/20170507/"/>
    <id>http://shevacjs.com/2017/05/07/20170507/</id>
    <published>2017-05-07T12:30:51.000Z</published>
    <updated>2017-07-21T04:21:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新鲜事"><a href="#新鲜事" class="headerlink" title="新鲜事"></a>新鲜事</h2><ul>
<li><a href="https://news.ycombinator.com/item?id=14241286" target="_blank" rel="external">LuaJIT 2.0.5 and 2.1.0-beta3 released</a> : 新版本的LuaJit, 不过看change好像都是实现细节上面的改动&amp;升级</li>
</ul>
<h2 id="工具技巧"><a href="#工具技巧" class="headerlink" title="工具技巧"></a>工具技巧</h2><ul>
<li><p><a href="https://developers.google.com/web/updates/2017/04/headless-chrome" target="_blank" rel="external">Getting Started with Headless Chrome</a> : 可以试试Chrome的<a href="https://en.wikipedia.org/wiki/Headless_software" target="_blank" rel="external">Headless</a>模式</p>
</li>
<li><p><a href="http://cenalulu.github.io/python/gil-in-python/" target="_blank" rel="external">Python的GIL是什么鬼，多线程性能究竟如何</a> : 对Python GIL可以有初步的认识和了解</p>
</li>
</ul>
<h2 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h2><ul>
<li><p><a href="https://blog.acolyer.org/2017/05/01/the-design-implementation-and-deployment-of-a-system-to-transparently-compress-hundreds-of-petabytes-of-image-files-for-a-file-storage-service/" target="_blank" rel="external">The design, implementation and deployment of a system to transparently compress hundreds of petabytes of image files for a file storage service</a> : Dropbox关于图片压缩的实践，在传统的JPEG算法上面，又引入了基于Hufferman的无损压缩算法，可以使文件的大小进一步减少(差不多23%)，整体思路是非常清晰，贴吧可以采纳下；具体还可以看<a href="https://www.usenix.org/sites/default/files/conference/protected-files/nsdi17_slides_horn.pdf" target="_blank" rel="external">slider</a>的介绍</p>
</li>
<li><p><a href="https://blog.acolyer.org/2017/04/26/improving-user-perceived-page-load-time-using-gaze/" target="_blank" rel="external">Improving user perceived page load time using gaze</a> : 传统的性能优化可能会侧重于<code>Onload</code> 或者 <code>SpeedIndex</code> 的响应时间，但是作者认为我们应该更关注所为的<code>perceives page load time</code>； 也就是一个页面的部分核心组件的展现时间（paper里面通过实际的实验来说明这个时间和常规的时间还是有不少差异的），提出了通过构建<code>自动发现页面核心组件</code> 以及相应的优化核心组件的加载时间来提升用户体验的办法; 感觉想法是非常新颖的 </p>
</li>
<li><p><a href="https://blog.acolyer.org/2016/11/02/memc3-compact-and-concurrent-memcache-with-dumber-caching-and-smarter-hashing/" target="_blank" rel="external">MemC3: Compact and concurrent Memcache with dumber caching and smarter hashing</a> : 一篇介绍memcached优化的文章，memcached虽然相对简单，但是深入研究，可以改进和优化的空间不少，本paper具体提了两个重大的方法，包括基于<a href="https://en.wikipedia.org/wiki/Cuckoo_hashing" target="_blank" rel="external">Cuckoo Hash</a>的hash改造，其可以提升内存存储效率&amp;支持并行访问，其次是基于<a href="https://en.wikipedia.org/wiki/Page_replacement_algorithm#Clock" target="_blank" rel="external">Clock LRU</a>的LRU改造方法；总体上面可以使得内存和运行速度分别有30%和3倍的提升</p>
</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><p><a href="https://wit.ai/blog/2017/05/01/new-duckling" target="_blank" rel="external">Open Sourcing our new Duckling</a> : 挺有意思的一个项目, 先mark</p>
</li>
<li><p><a href="https://httpd.apache.org/docs/2.4/mod/mod_lua.html" target="_blank" rel="external">Apache Module mod_lua</a> : Apache的mod lua，看功能简介有点想nginx lua</p>
</li>
<li><p><a href="http://www.jianshu.com/p/90579ec3113f" target="_blank" rel="external">当CPU飙高时，它在做什么</a> : 看完的结论是自己赶紧写一个类似的脚本</p>
</li>
<li><p><a href="https://littlemaninmyhead.wordpress.com/2017/04/22/top-10-developer-crypto-mistakes/" target="_blank" rel="external">TOP 10 DEVELOPER CRYPTO MISTAKES</a> : 一些安全编码的方式&amp;技巧</p>
</li>
<li><p><a href="http://www.hackerfactor.com/blog/index.php?/archives/762-Attacked-Over-Tor.html" target="_blank" rel="external">Attacked Over Tor</a> : 里面讲到的<code>ZIP BOOM</code>的case可以关注下，是个不错的对待攻击者的方式</p>
</li>
<li><p><a href="https://news.ycombinator.com/item?id=14280625" target="_blank" rel="external">Why does Google prepend while(1); to their JSON responses? </a> : 一个很巧妙的解决CSRF攻击的办法，可以了解下</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新鲜事&quot;&gt;&lt;a href=&quot;#新鲜事&quot; class=&quot;headerlink&quot; title=&quot;新鲜事&quot;&gt;&lt;/a&gt;新鲜事&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=14241286&quot; targ
    
    </summary>
    
    
      <category term="weekly" scheme="http://shevacjs.com/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>About PCA</title>
    <link href="http://shevacjs.com/2017/05/06/pca/"/>
    <id>http://shevacjs.com/2017/05/06/pca/</id>
    <published>2017-05-05T16:25:11.000Z</published>
    <updated>2017-07-21T04:21:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>wiki概述:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在多元统计分析中，主成分分析（英语：Principal components analysis，PCA）是一种分析、简化数据集的技术。主成分分析经常用于减少数据集的维数，同时保持数据集中的对方差贡献最大的特征。这是通过保留低阶主成分，忽略高阶主成分做到的。这样低阶成分往往能够保留住数据的最重要方面。但是，这也不是一定的，要视具体应用而定。由于主成分分析依赖所给数据，所以数据的准确性对分析结果影响很大。</div></pre></td></tr></table></figure>
<p>数学定义:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">PCA的数学定义是：一个正交化线性变换，把数据变换到一个新的坐标系统中，使得这一数据的任何投影的第一大方差在第一个坐标（称为第一主成分）上，第二大方差在第二个坐标（第二主成分）上，依次类推</div></pre></td></tr></table></figure>
<h2 id="个人理解"><a href="#个人理解" class="headerlink" title="个人理解"></a>个人理解</h2><p>考虑到我们有一个矩阵m*n , 行代表特征，列代表数据(意味着我们有N个数据点，每个数据点有M个维度) </p>
<p>我们基于的假设是: 我们可以约定一个办法, 可以让这堆数据从m维降到k维, 但是对这个数据包含的信息量影响很小;</p>
<p>如果数据没有一定的分布，其实这个假设是不大可能成立的，从wiki上面可以看到描述: </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">通过使用降维来保存大部分数据信息的主成分分析的观点是不正确的。确实如此，当没有任何假设信息的信号模型时，主成分分析在降维的同时并不能保证信息的不丢失，其中信息是由香农熵[8]来衡量的。 基于假设得 &#123;\displaystyle \mathbf &#123;x&#125; =\mathbf &#123;s&#125; +\mathbf &#123;n&#125; &#125;  \mathbf&#123;x&#125; = \mathbf&#123;s&#125; +  \mathbf&#123;n&#125;   也就是说，向量 x 是含有信息的目标信号 s 和噪声信号 n 之和，从信息论角度考虑主成分分析在降维上是最优的。</div><div class="line">特别地，Linsker证明了如果 s 是高斯分布，且 n 是 与密度矩阵相应的协方差矩阵的高斯噪声，</div></pre></td></tr></table></figure>
<p>现在我们不考虑这个假设是否成立的前提下, 需要抽象一个数据方法来实践; 一个重点的衡量标准是:<code>数据包含的信息量影响很小</code> ; 基于信息论的假设：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在信号处理中认为信号具有较大的方差，噪声有较小的方差，信噪比就是信号与噪声的方差比，越大越好。</div></pre></td></tr></table></figure>
<p>这也就抽象出上面具体的<code>数学定义</code></p>
<p>所以整体依赖的核心思路和思想是对<code>信息论</code>的抽象和实践</p>
<h2 id="简单推导"><a href="#简单推导" class="headerlink" title="简单推导"></a>简单推导</h2><p>假设有m个点，目标后的向量空间为 </p>
<p>$$<br>U = {u_1, u_2, u_3, … u_n}<br>$$</p>
<p>假设$u_1$是让其投影方差最大的直线的单位向量；则$u_1$满足如下要求: </p>
<p>对于任意一个点 $x_i$ 其到目标向量$u_1$的投影的长度为 两个向量的点积，即: $x_i.u_i$，平方之后不影响结论，则我们考虑目标后的方差之和 (目标是求让$\lambda$最大的u):</p>
<p>$$\lambda=\frac{1}{m}\sum_1^m(x_i.u_1)^2 = \frac{1}{m}\sum_1^m(x_i^Tu_1)(x_i^Tu_1) $$<br>$$=\frac{1}{m}\sum_1^m(x_i^Tu_1)^T(x_i^Tu_1)$$<br>$$=\frac{1}{m}\sum_1^mu_1^Tx_ix_i^Tu_1$$<br>$$=\frac{1}{m}u_1^T\sum_1^m(x_ix_i^T)u_1$$<br>$$=u_1^T\frac{1}{m}\sum_1^m(x_ix_i^T)u_1$$</p>
<p>令 $A=\frac{1}{m}\sum_1^m(x_ix_i^T)$, $u_1$简写成u则有 :<br>$$\lambda=u^TAu$$</p>
<p>由于 $u^Tu=1$, 同时乘以u, 则有:</p>
<p>$$\lambda u=Au$$</p>
<p>故而可以知道 u 是矩阵 A 的最大特征值对应的特征向量 , 第二大特征值等依次也可以推出</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://www.cnblogs.com/jerrylead/archive/2011/04/18/2020209.html" target="_blank" rel="external">主成分分析（Principal components analysis）-最大方差解释</a></li>
<li><a href="http://blog.csdn.net/zhongkelee/article/details/44064401" target="_blank" rel="external">主成分分析（PCA）原理详解</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;wiki概述:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
    
    </summary>
    
    
      <category term="ml" scheme="http://shevacjs.com/tags/ml/"/>
    
  </entry>
  
</feed>
